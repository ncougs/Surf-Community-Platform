[{"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\index.js":"1","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\App.js":"2","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\Home.js":"3","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\features\\Navbar.js":"4","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\LoginModal.js":"5","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\utils\\mutations.js":"6","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\utils\\auth.js":"7","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\createPostModal.js":"8","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\signupModal.js":"9","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\utils\\queries.js":"10","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\locations.js":"11","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\features\\GoogleMap.js":"12","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\MapMarker.js":"13","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\LocationPage.js":"14","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\ShowComments.js":"15","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\ShowPhotos.js":"16","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\ShowVideos.js":"17","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\surfDataCard.js":"18","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\photoCard.js":"19","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\videoCard.js":"20","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\FavLocation.js":"21","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\Profile.js":"22","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\displayFavLocations.js":"23","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\locationSearchBar.js":"24","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\displayDots.js":"25","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\Error.js":"26","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\commentCard.js":"27"},{"size":199,"mtime":1633930167226,"results":"28","hashOfConfig":"29"},{"size":2096,"mtime":1635652360996,"results":"30","hashOfConfig":"29"},{"size":2883,"mtime":1636861530977,"results":"31","hashOfConfig":"29"},{"size":2885,"mtime":1635745129607,"results":"32","hashOfConfig":"29"},{"size":3551,"mtime":1635733270868,"results":"33","hashOfConfig":"29"},{"size":2248,"mtime":1636774483099,"results":"34","hashOfConfig":"29"},{"size":686,"mtime":1635299858858,"results":"35","hashOfConfig":"29"},{"size":7060,"mtime":1635733507953,"results":"36","hashOfConfig":"29"},{"size":4318,"mtime":1635733294801,"results":"37","hashOfConfig":"29"},{"size":4414,"mtime":1637022944818,"results":"38","hashOfConfig":"29"},{"size":1100,"mtime":1635386601116,"results":"39","hashOfConfig":"29"},{"size":962,"mtime":1635469468312,"results":"40","hashOfConfig":"29"},{"size":1194,"mtime":1635733135676,"results":"41","hashOfConfig":"29"},{"size":4524,"mtime":1637018570253,"results":"42","hashOfConfig":"29"},{"size":1150,"mtime":1636861524442,"results":"43","hashOfConfig":"29"},{"size":3266,"mtime":1637028122820,"results":"44","hashOfConfig":"29"},{"size":1548,"mtime":1636861525787,"results":"45","hashOfConfig":"29"},{"size":1829,"mtime":1635409455271,"results":"46","hashOfConfig":"29"},{"size":2411,"mtime":1636853646268,"results":"47","hashOfConfig":"29"},{"size":2662,"mtime":1636861532523,"results":"48","hashOfConfig":"29"},{"size":1674,"mtime":1635416161424,"results":"49","hashOfConfig":"29"},{"size":3369,"mtime":1636861529465,"results":"50","hashOfConfig":"29"},{"size":1686,"mtime":1635469621775,"results":"51","hashOfConfig":"29"},{"size":1306,"mtime":1635469115938,"results":"52","hashOfConfig":"29"},{"size":851,"mtime":1635415566649,"results":"53","hashOfConfig":"29"},{"size":504,"mtime":1635652359107,"results":"54","hashOfConfig":"29"},{"size":3185,"mtime":1636863898520,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1ogwa8t",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\index.js",[],["122","123"],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\App.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\Home.js",["124"],"import { Row, Col, Container, Spinner } from 'react-bootstrap';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useState } from 'react';\r\nimport { CURRENT_DAY_MEDIA } from '../utils/queries';\r\nimport PhotoCard from '../components/photoCard';\r\nimport VideoCard from '../components/videoCard';\r\nimport DisplayDots from '../components/displayDots';\r\n\r\nconst Home = () => {\r\n\t//get the media for the current day\r\n\tconst { loading, error, data } = useQuery(CURRENT_DAY_MEDIA, {\r\n\t\tpollInterval: 500,\r\n\t});\r\n\r\n\tconst [vertical, setVertical] = useState(false);\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tsetVertical(!vertical);\r\n\t};\r\n\r\n\tconst Styles = {\r\n\t\tmainHeading: {\r\n\t\t\tfontSize: '5vw',\r\n\t\t\tcolor: '#F5F6F9',\r\n\t\t},\r\n\t\tsection: {\r\n\t\t\tminHeight: '80vh',\r\n\t\t},\r\n\t\tsecondaryHeading: {\r\n\t\t\tfontSize: '5vw',\r\n\t\t\tcolor: '#042D3C',\r\n\t\t\ttextAlign: 'center',\r\n\t\t},\r\n\t\trecentMedia: {\r\n\t\t\tbackgroundColor: '#F5F6F9',\r\n\t\t},\r\n\t\tloadingWheel: {\r\n\t\t\tcolor: '#0A9D7B',\r\n\t\t},\r\n\t\tfontColour: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row className={'m-auto'} style={Styles.section}>\r\n\t\t\t\t<Col className={'col-8 d-flex'}>\r\n\t\t\t\t\t<h1 className='m-auto' style={Styles.mainHeading}>\r\n\t\t\t\t\t\tSurf Spot\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\tThe Local surf community application.\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Container fluid className='p-0 m-0' style={Styles.recentMedia}>\r\n\t\t\t\t<h2 className='p-2' style={Styles.secondaryHeading}>\r\n\t\t\t\t\tRecent Activity\r\n\t\t\t\t</h2>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Spinner animation='border' style={Styles.loadingWheel} />\r\n\t\t\t\t\t\t\t\t\t<span className='mx-2' style={Styles.fontColour}>\r\n\t\t\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : data?.currentDayMedia.length ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<DisplayDots handleClick={handleClick} />\r\n\t\t\t\t\t\t\t\t{data?.currentDayMedia.map((media, i) =>\r\n\t\t\t\t\t\t\t\t\tmedia.url.includes('video/upload') ? (\r\n\t\t\t\t\t\t\t\t\t\t<VideoCard\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tlocation={media.locationID.name}\r\n\t\t\t\t\t\t\t\t\t\t\turl={media.url}\r\n\t\t\t\t\t\t\t\t\t\t\tdate={media.date}\r\n\t\t\t\t\t\t\t\t\t\t\tisVertical={vertical}\r\n\t\t\t\t\t\t\t\t\t\t\tcaption={media.caption}\r\n\t\t\t\t\t\t\t\t\t\t\tuser={media.user_id.username}\r\n\t\t\t\t\t\t\t\t\t\t\tid={media._id}\r\n\t\t\t\t\t\t\t\t\t\t\tpublic_id={media.public_id}\r\n\t\t\t\t\t\t\t\t\t\t\tuserID={media.user_id._id}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<PhotoCard\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tlocation={media.locationID.name}\r\n\t\t\t\t\t\t\t\t\t\t\turl={media.url}\r\n\t\t\t\t\t\t\t\t\t\t\tdate={media.date}\r\n\t\t\t\t\t\t\t\t\t\t\tisVertical={vertical}\r\n\t\t\t\t\t\t\t\t\t\t\tcaption={media.caption}\r\n\t\t\t\t\t\t\t\t\t\t\tuser={media.user_id.username}\r\n\t\t\t\t\t\t\t\t\t\t\tid={media._id}\r\n\t\t\t\t\t\t\t\t\t\t\tpublic_id={media.public_id}\r\n\t\t\t\t\t\t\t\t\t\t\tuserID={media.user_id._id}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p>No media uploaded for the day</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\features\\Navbar.js",["125","126"],"import { useState, useEffect } from 'react';\r\nimport { Button, Form, Navbar, Nav, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginModal from '../components/LoginModal';\r\nimport CreatePostModal from '../components/createPostModal';\r\nimport SignupModal from '../components/signupModal';\r\nimport Auth from '../utils/auth';\r\nimport LocationSearchBar from '../components/locationSearchBar';\r\n\r\nconst NavigationBar = () => {\r\n\tconst [loginModal, LoginModalOpened] = useState(false);\r\n\tconst [postModal, postModalOpened] = useState(false);\r\n\tconst [isLoggedIn, setLoggedIn] = useState(false);\r\n\tconst [signupModal, showSignup] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tAuth.loggedIn() ? setLoggedIn(true) : setLoggedIn(false);\r\n\t});\r\n\r\n\tconst closeLoginModal = () => LoginModalOpened(false);\r\n\tconst OpenLoginModal = () => LoginModalOpened(true);\r\n\r\n\tconst closePostModal = () => postModalOpened(false);\r\n\tconst openPostModal = () => postModalOpened(true);\r\n\r\n\tconst closeSignupModal = () => showSignup(false);\r\n\tconst openSignupModal = () => showSignup(true);\r\n\r\n\tconst Styles = {\r\n\t\tlink: {\r\n\t\t\tcolor: '#F5F6F9',\r\n\t\t\ttextDecoration: 'none',\r\n\t\t\tfontSize: '20px',\r\n\t\t},\r\n\t\tmainButton: {\r\n\t\t\tbackgroundColor: '#0A9D7B',\r\n\t\t\tborderColor: '#0A9D7B',\r\n\t\t\tcolor: '#F5F6F9',\r\n\t\t\tfontSize: '20px',\r\n\t\t},\r\n\t\tsearchBar: {\r\n\t\t\tbackgroundColor: '#F5F6F9',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar expand='lg'>\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Navbar.Brand>\r\n\t\t\t\t\t\t<Link className='fs-1' to='/' style={Styles.link}>\r\n\t\t\t\t\t\t\tSurf Spot\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\t\t\t\t\t<LocationSearchBar />\r\n\t\t\t\t\t<Navbar.Collapse id='basic-navbar-nav' className='flex-grow-0'>\r\n\t\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t\t\t\t<Link className='m-auto mx-2' to='/profile' style={Styles.link}>\r\n\t\t\t\t\t\t\t\t\tProfile\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t<Link className='m-auto mx-2' to='/locations' style={Styles.link}>\r\n\t\t\t\t\t\t\t\tLocations\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\t\t\t\t\tclassName='m-auto mx-2'\r\n\t\t\t\t\t\t\t\t\t\tonClick={Auth.logout}\r\n\t\t\t\t\t\t\t\t\t\tstyle={Styles.link}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={openPostModal} style={Styles.mainButton}>\r\n\t\t\t\t\t\t\t\t\t\tCreate Post\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Button onClick={OpenLoginModal} style={Styles.mainButton}>\r\n\t\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</Navbar.Collapse>\r\n\t\t\t\t</Container>\r\n\t\t\t</Navbar>\r\n\t\t\t<LoginModal\r\n\t\t\t\topenModal={loginModal}\r\n\t\t\t\tcloseLoginModal={closeLoginModal}\r\n\t\t\t\topenSignupModal={openSignupModal}\r\n\t\t\t/>\r\n\t\t\t<CreatePostModal openModal={postModal} closeModal={closePostModal} />\r\n\t\t\t<SignupModal openModal={signupModal} closeModal={closeSignupModal} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\LoginModal.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\utils\\auth.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\createPostModal.js",["127","128","129","130"],"import { useEffect, useState } from 'react';\r\nimport {\r\n\tModal,\r\n\tButton,\r\n\tForm,\r\n\tSpinner,\r\n\tFloatingLabel,\r\n\tRow,\r\n\tCol,\r\n} from 'react-bootstrap';\r\n\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { POST_PHOTO } from '../utils/mutations';\r\nimport { POST_VIDEO } from '../utils/mutations';\r\nimport { POST_COMMENT } from '../utils/mutations';\r\nimport { LOCATIONS } from '../utils/queries';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst CreatePostModal = ({ openModal, closeModal }) => {\r\n\tconst [showComments, setShowComments] = useState(false);\r\n\tconst [showMedia, setShowMedia] = useState(false);\r\n\tconst [file, setFile] = useState('');\r\n\tconst [comment, updateComment] = useState('');\r\n\tconst [caption, updateCaption] = useState('');\r\n\tconst [locationID, updateSelectedLocationID] = useState('');\r\n\tconst [locations, updateLocations] = useState([]);\r\n\tconst [preSelectedLocation, setPreSelectedLocation] = useState('');\r\n\r\n\tconst location = useLocation();\r\n\r\n\tconst [postPhoto, { loading: photoLoading, error: photoError }] =\r\n\t\tuseMutation(POST_PHOTO);\r\n\r\n\tconst [postVideo, { loading: videoLoading, error: videoError }] =\r\n\t\tuseMutation(POST_VIDEO);\r\n\r\n\tconst [postComment, { loading: commentLoading, error: commentError }] =\r\n\t\tuseMutation(POST_COMMENT);\r\n\r\n\tuseQuery(LOCATIONS, {\r\n\t\tonCompleted: (data) => updateLocations(data.locations),\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tconst foundLocation = location.pathname.split('/').at(-1);\r\n\r\n\t\tconst filteredLocations = locations.filter((i) => i.name === foundLocation);\r\n\r\n\t\tif (filteredLocations.length) {\r\n\t\t\tsetPreSelectedLocation(foundLocation);\r\n\t\t\tupdateSelectedLocationID(filteredLocations[0]._id);\r\n\t\t} else {\r\n\t\t\tsetPreSelectedLocation('');\r\n\t\t}\r\n\t}, [locations, location]);\r\n\r\n\tconst handleSectionRender = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (e.target.value == 'comments') {\r\n\t\t\tsetShowComments(true);\r\n\t\t\tsetShowMedia(false);\r\n\t\t} else {\r\n\t\t\tsetShowComments(false);\r\n\t\t\tsetShowMedia(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst clearPostData = () => {\r\n\t\tsetFile('');\r\n\t\tupdateComment('');\r\n\t\tupdateCaption('');\r\n\t};\r\n\r\n\tconst handleFormSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tcomment ? await uploadComment() : await handleUpload();\r\n\r\n\t\tclearPostData();\r\n\t\tcloseModal();\r\n\t};\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tfile.name\r\n\t\t\t.split('.')\r\n\t\t\t.at(-1)\r\n\t\t\t.toLowerCase()\r\n\t\t\t.match(/^(mp4|mov)$/)\r\n\t\t\t? await uploadVideo()\r\n\t\t\t: await uploadImage();\r\n\t};\r\n\r\n\tconst uploadComment = async () => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { _id },\r\n\t\t\t} = Auth.getProfile();\r\n\r\n\t\t\tawait postComment({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tbody: comment,\r\n\t\t\t\t\tuser_id: _id,\r\n\t\t\t\t\tlocationID,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst uploadImage = async () => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { _id },\r\n\t\t\t} = Auth.getProfile();\r\n\r\n\t\t\tawait postPhoto({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tfile,\r\n\t\t\t\t\tuser_id: _id,\r\n\t\t\t\t\tlocationID,\r\n\t\t\t\t\tcaption,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst uploadVideo = async () => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tdata: { _id },\r\n\t\t\t} = Auth.getProfile();\r\n\r\n\t\t\tawait postVideo({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\tfile,\r\n\t\t\t\t\tuser_id: _id,\r\n\t\t\t\t\tlocationID,\r\n\t\t\t\t\tcaption,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst Styles = {\r\n\t\tfont: {\r\n\t\t\tfontFamily: `'Passion One', cursive`,\r\n\t\t},\r\n\t\tmainHeading: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tbackgroundColor: '#F5F6F9',\r\n\t\t},\r\n\t\tmainButton: {\r\n\t\t\tbackgroundColor: '#0A9D7B',\r\n\t\t\tborderColor: '#0A9D7B',\r\n\t\t\tcolor: '#F5F6F9',\r\n\t\t\tfontSize: '20px',\r\n\t\t\twidth: '100%',\r\n\t\t},\r\n\t\tsecondaryButton: {\r\n\t\t\tbackgroundColor: '#042D3C',\r\n\t\t\tborderColor: '#042D3C',\r\n\t\t\tcolor: '#F5F6F9',\r\n\t\t\tfontSize: '20px',\r\n\t\t},\r\n\t\tpointer: {\r\n\t\t\tcursor: 'pointer',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={openModal}\r\n\t\t\t\tonHide={() => {\r\n\t\t\t\t\tcloseModal();\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={Styles.font}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Header\r\n\t\t\t\t\tclassName='justify-content-center'\r\n\t\t\t\t\tstyle={Styles.background}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Modal.Title style={Styles.mainHeading} className='fs-1 fw-bold'>\r\n\t\t\t\t\t\tCreate Post\r\n\t\t\t\t\t</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body style={Styles.background}>\r\n\t\t\t\t\t<Form onSubmit={handleFormSubmit} style={Styles.background}>\r\n\t\t\t\t\t\t<Form.Group className='mb-3' controlId='username'>\r\n\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tas='select'\r\n\t\t\t\t\t\t\t\tonChange={(e) => updateSelectedLocationID(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{preSelectedLocation ? (\r\n\t\t\t\t\t\t\t\t\t<option>{preSelectedLocation}</option>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<option>{'--Please Select--'}</option>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{locations.map((location, i) => (\r\n\t\t\t\t\t\t\t\t\t<option key={i} value={location._id}>\r\n\t\t\t\t\t\t\t\t\t\t{location.name}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t<Row className='mb-4'>\r\n\t\t\t\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={handleSectionRender}\r\n\t\t\t\t\t\t\t\t\tvalue='media'\r\n\t\t\t\t\t\t\t\t\tclassName='m-auto'\r\n\t\t\t\t\t\t\t\t\tstyle={Styles.secondaryButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload Media\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col className='d-flex'>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={handleSectionRender}\r\n\t\t\t\t\t\t\t\t\tvalue='comments'\r\n\t\t\t\t\t\t\t\t\tclassName='m-auto'\r\n\t\t\t\t\t\t\t\t\tstyle={Styles.secondaryButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tAdd Comment\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t{showMedia && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Form.Group controlId='uploadFile' className='mb-3'>\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setFile(e.target.files[0])}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t<Form.Group controlId='caption' className='mb-3'>\r\n\t\t\t\t\t\t\t\t\t<FloatingLabel\r\n\t\t\t\t\t\t\t\t\t\tcontrolId='addCaption'\r\n\t\t\t\t\t\t\t\t\t\tlabel='caption'\r\n\t\t\t\t\t\t\t\t\t\tclassName='mb-3'\r\n\t\t\t\t\t\t\t\t\t\tvalue={caption}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => updateCaption(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control required as='textarea' />\r\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{showComments && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Form.Group controlId='comment' className='mb-3'>\r\n\t\t\t\t\t\t\t\t\t<FloatingLabel\r\n\t\t\t\t\t\t\t\t\t\tcontrolId='addComment'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Comment'\r\n\t\t\t\t\t\t\t\t\t\tclassName='mb-3'\r\n\t\t\t\t\t\t\t\t\t\tvalue={comment}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => updateComment(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control required as='textarea' />\r\n\t\t\t\t\t\t\t\t\t</FloatingLabel>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{photoLoading || videoLoading || commentLoading ? (\r\n\t\t\t\t\t\t\t<Button variant='primary' disabled>\r\n\t\t\t\t\t\t\t\t<Spinner\r\n\t\t\t\t\t\t\t\t\tas='span'\r\n\t\t\t\t\t\t\t\t\tanimation='border'\r\n\t\t\t\t\t\t\t\t\tsize='sm'\r\n\t\t\t\t\t\t\t\t\trole='status'\r\n\t\t\t\t\t\t\t\t\taria-hidden='true'\r\n\t\t\t\t\t\t\t\t\tclassName='mx-1'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Button type='submit' style={Styles.mainButton} className='p-3'>\r\n\t\t\t\t\t\t\t\tCreate Post\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default CreatePostModal;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\signupModal.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\utils\\queries.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\locations.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\features\\GoogleMap.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\MapMarker.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\LocationPage.js",["131"],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\ShowComments.js",["132"],"import { useQuery } from '@apollo/client';\r\nimport { Col, Spinner } from 'react-bootstrap';\r\nimport { LOCATION_TODAY_COMMENTS } from '../utils/queries';\r\nimport CommentCard from './commentCard';\r\n\r\nconst ShowComments = ({ location }) => {\r\n\tconst { data, loading, error } = useQuery(LOCATION_TODAY_COMMENTS, {\r\n\t\tvariables: { location },\r\n\t\tpollInterval: 500,\r\n\t});\r\n\r\n\tconst Styles = {\r\n\t\tloadingWheel: {\r\n\t\t\tcolor: '#0A9D7B',\r\n\t\t},\r\n\t\tfontColour: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Spinner animation='border' style={Styles.loadingWheel} />\r\n\t\t\t\t\t\t<span className='mx-2' style={Styles.fontColour}>\r\n\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</>\r\n\t\t\t) : data?.locationCurrentDayComments.length ? (\r\n\t\t\t\tdata.locationCurrentDayComments.map((comment, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CommentCard\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tbody={comment.body}\r\n\t\t\t\t\t\t\tusername={comment.user_id.username}\r\n\t\t\t\t\t\t\tuserID={comment.user_id._id}\r\n\t\t\t\t\t\t\tid={comment._id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t) : (\r\n\t\t\t\t<p>No comments added for the day</p>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ShowComments;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\ShowPhotos.js",["133"],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\ShowVideos.js",["134"],"import { useQuery } from '@apollo/client';\r\nimport { useState } from 'react';\r\nimport { Col, Spinner } from 'react-bootstrap';\r\nimport { LOCATION_TODAY_VIDEOS } from '../utils/queries';\r\nimport VideoCard from './videoCard';\r\nimport DisplayDots from './displayDots';\r\n\r\nconst ShowVideos = ({ location }) => {\r\n\tconst [vertical, setVertical] = useState(false);\r\n\r\n\tconst { data, loading, error } = useQuery(LOCATION_TODAY_VIDEOS, {\r\n\t\tvariables: { location },\r\n\t\tpollInterval: 500,\r\n\t});\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tsetVertical(!vertical);\r\n\t};\r\n\r\n\tconst Styles = {\r\n\t\tloadingWheel: {\r\n\t\t\tcolor: '#0A9D7B',\r\n\t\t},\r\n\t\tfontColour: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Spinner animation='border' style={Styles.loadingWheel} />\r\n\t\t\t\t\t\t<span className='mx-2' style={Styles.fontColour}>\r\n\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</>\r\n\t\t\t) : data?.locationCurrentDayVideos.length ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<DisplayDots handleClick={handleClick} />\r\n\t\t\t\t\t{data?.locationCurrentDayVideos.map((video, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<VideoCard\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\turl={video.url}\r\n\t\t\t\t\t\t\t\tdate={video.date}\r\n\t\t\t\t\t\t\t\tlocation={location}\r\n\t\t\t\t\t\t\t\tisVertical={vertical}\r\n\t\t\t\t\t\t\t\tcaption={video.caption}\r\n\t\t\t\t\t\t\t\tuser={video.user_id.username}\r\n\t\t\t\t\t\t\t\tid={video._id}\r\n\t\t\t\t\t\t\t\tpublic_id={video.public_id}\r\n\t\t\t\t\t\t\t\tuserID={video.user_id._id}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<p>No videos uploaded for the day</p>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ShowVideos;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\surfDataCard.js",["135"],"import { Row, Col, Card } from 'react-bootstrap';\r\nimport {\r\n\tArrowUp,\r\n\tArrowDown,\r\n\tArrowRight,\r\n\tArrowLeft,\r\n\tArrowUpLeft,\r\n\tArrowUpRight,\r\n\tArrowDownLeft,\r\n\tArrowDownRight,\r\n\tThermometer,\r\n\tWind,\r\n\tSpeedometer,\r\n\tTsunami,\r\n} from 'react-bootstrap-icons';\r\n\r\nconst SurfDataCard = ({ time, height, direction, degrees, windSpeed }) => {\r\n\t//return wind direction based off compass direction\r\n\tconst getDirection = (angle) => {\r\n\t\tconst directions = [`N`, `NE`, 'E', 'SE', 'S', 'SW', 'W', 'NW'];\r\n\t\tconst component = [\r\n\t\t\t<ArrowUp />,\r\n\t\t\t<ArrowUpRight />,\r\n\t\t\t<ArrowRight />,\r\n\t\t\t<ArrowDownRight />,\r\n\t\t\t<ArrowDown />,\r\n\t\t\t<ArrowDownLeft />,\r\n\t\t\t<ArrowLeft />,\r\n\t\t\t<ArrowUpLeft />,\r\n\t\t];\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{directions[Math.round(angle / 45) % 8]}\r\n\t\t\t\t{component[Math.round(angle / 45) % 8]}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\t//convert wind speed from mps to km/h\r\n\tconst convertToKMPH = (speedMPS) => {\r\n\t\treturn Math.round(speedMPS * 3.6);\r\n\t};\r\n\r\n\tconst Styles = {\r\n\t\ttext: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tbackgroundColor: '#F5F6F9',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Col className='text-center' style={Styles.text}>\r\n\t\t\t<Card className='shadow-lg m-5 p-3' style={Styles.background}>\r\n\t\t\t\t<Card.Title className='fs-4 text-muted'>{time}</Card.Title>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title className='fs-1 fw-bold'>\r\n\t\t\t\t\t\t<span className='px-2'>\r\n\t\t\t\t\t\t\t<Tsunami />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t{`${height}ft`}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<p className='fw-bold fs-5'>\r\n\t\t\t\t\t\t\t<Thermometer />\r\n\t\t\t\t\t\t\t{`${degrees}°`}\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<p className='fw-bold fs-5'>\r\n\t\t\t\t\t\t\t<Wind className='m-2' />\r\n\t\t\t\t\t\t\t{`${convertToKMPH(windSpeed)}  km/h`}\r\n\t\t\t\t\t\t\t<span className='mx-2'>{getDirection(direction)}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</Col>\r\n\t);\r\n};\r\n\r\nexport default SurfDataCard;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\photoCard.js",["136","137"],"import { Col, Card, Row, Spinner } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { X } from 'react-bootstrap-icons';\r\nimport { DELETE_PHOTO } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst PhotoCard = ({\r\n\tlocation,\r\n\tdate,\r\n\turl,\r\n\tisVertical,\r\n\tcaption,\r\n\tuser,\r\n\tuserID,\r\n\tid,\r\n\tpublic_id,\r\n}) => {\r\n\tconst [isUser, setIsUser] = useState(false);\r\n\r\n\tconst [deletePhoto, { data, loading, error }] = useMutation(DELETE_PHOTO, {\r\n\t\tvariables: { deletePhotoId: id, publicId: public_id },\r\n\t});\r\n\r\n\tconst isLoggedIn = Auth.loggedIn();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoggedIn) {\r\n\t\t\tconst currentUser = Auth.getProfile();\r\n\t\t\tcurrentUser?.data?._id === userID ? setIsUser(true) : setIsUser(false);\r\n\t\t}\r\n\t}, [isLoggedIn, userID]);\r\n\r\n\tconst handleClick = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\ttry {\r\n\t\t\tawait deletePhoto(id, public_id);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst Styles = {\r\n\t\tcard: {\r\n\t\t\twidth: '25rem',\r\n\t\t\tborderColor: '#FEFFFF',\r\n\t\t\tborderRadius: '0',\r\n\t\t},\r\n\t\timg: {\r\n\t\t\tborderRadius: '0',\r\n\t\t},\r\n\t\theading: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Col lg={isVertical ? '12' : '4'} className='mx-auto my-2'>\r\n\t\t\t\t<Card style={Styles.card} className='mx-auto shadow-lg border-1'>\r\n\t\t\t\t\t<Link className='text-decoration-none' to={`/location/${location}`}>\r\n\t\t\t\t\t\t<Card.Title className='p-2' style={Styles.heading}>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>{location}</Col>\r\n\t\t\t\t\t\t\t\t<Col className='d-flex justify-content-end'>\r\n\t\t\t\t\t\t\t\t\t{isUser ? (\r\n\t\t\t\t\t\t\t\t\t\tloading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Spinner animation='border' style={Styles.heading} />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<X onClick={(e) => handleClick(e)} />\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t<Card.Img variant='top' src={url} style={Styles.img} />\r\n\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<small className='text-muted p-2'>{`${user}${\r\n\t\t\t\t\t\t\t\t\tcaption ? `: ${caption}` : ''\r\n\t\t\t\t\t\t\t\t}`}</small>\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<small className='text-muted p-2'>{`uploaded at ${moment(\r\n\t\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\t\t'x'\r\n\t\t\t\t\t\t\t).format('hh:mm a, DD/MM/YYYY')}`}</small>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Card>\r\n\t\t\t</Col>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PhotoCard;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\videoCard.js",["138","139"],"import { Col, Card, Row, Spinner } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport ReactPlayer from 'react-player';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { X } from 'react-bootstrap-icons';\r\nimport { DELETE_VIDEO } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst VideoCard = ({\r\n\tlocation,\r\n\tdate,\r\n\turl,\r\n\tisVertical,\r\n\tcaption,\r\n\tuser,\r\n\tuserID,\r\n\tid,\r\n\tpublic_id,\r\n}) => {\r\n\tconst [isUser, setIsUser] = useState(false);\r\n\r\n\tconst [deleteVideo, { data, loading, error }] = useMutation(DELETE_VIDEO, {\r\n\t\tvariables: { deleteVideoId: id, publicId: public_id },\r\n\t});\r\n\r\n\tconst isLoggedIn = Auth.loggedIn();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoggedIn) {\r\n\t\t\tconst currentUser = Auth.getProfile();\r\n\t\t\tcurrentUser?.data?._id === userID ? setIsUser(true) : setIsUser(false);\r\n\t\t}\r\n\t}, [isLoggedIn, userID]);\r\n\r\n\tconst handleClick = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\ttry {\r\n\t\t\tawait deleteVideo(id, public_id);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst Styles = {\r\n\t\tcard: {\r\n\t\t\twidth: '25rem',\r\n\t\t\theight: 'max-content',\r\n\t\t\tborderColor: '#FEFFFF',\r\n\t\t\tborderRadius: '0',\r\n\t\t},\r\n\t\theading: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t\tfooter: {\r\n\t\t\tborder: 'none',\r\n\t\t},\r\n\t\tvideo: {\r\n\t\t\tlineHeight: 'normal',\r\n\t\t},\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Col lg={isVertical ? '12' : '4'} className='mx-auto my-2'>\r\n\t\t\t\t<Card className='mx-auto shadow-lg border-1' style={Styles.card}>\r\n\t\t\t\t\t<Link className='text-decoration-none' to={`/location/${location}`}>\r\n\t\t\t\t\t\t<Card.Title className='p-2' style={Styles.heading}>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>{location}</Col>\r\n\t\t\t\t\t\t\t\t<Col className='d-flex justify-content-end'>\r\n\t\t\t\t\t\t\t\t\t{isUser ? (\r\n\t\t\t\t\t\t\t\t\t\tloading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<Spinner animation='border' style={Styles.heading} />\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<X onClick={(e) => handleClick(e)} />\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t<ReactPlayer\r\n\t\t\t\t\t\t\turl={url}\r\n\t\t\t\t\t\t\twidth='100%'\r\n\t\t\t\t\t\t\theight='100%'\r\n\t\t\t\t\t\t\tvolume={null}\r\n\t\t\t\t\t\t\tmuted={true}\r\n\t\t\t\t\t\t\tcontrols\r\n\t\t\t\t\t\t\tstyle={Styles.video}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Card.Footer style={Styles.footer}>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<small className='text-muted p-2'>{`${user}${\r\n\t\t\t\t\t\t\t\t\tcaption ? `: ${caption}` : ''\r\n\t\t\t\t\t\t\t\t}`}</small>\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<small className='text-muted p-2'>{`uploaded at ${moment(\r\n\t\t\t\t\t\t\t\tdate,\r\n\t\t\t\t\t\t\t\t'x'\r\n\t\t\t\t\t\t\t).format('hh:mm a, DD/MM/YYYY')}`}</small>\r\n\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Card>\r\n\t\t\t</Col>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default VideoCard;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\FavLocation.js",["140","141","142","143"],"import { Heart, HeartFill } from 'react-bootstrap-icons';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FAVOURITE_LOCATION } from '../utils/mutations';\r\nimport { USER_FAV_LOCATIONS } from '../utils/queries';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst FavLocation = ({ location, user }) => {\r\n\t//state variables\r\n\tconst [isFavouriteLocation, setFavouriteLocation] = useState(false);\r\n\r\n\t//return users fav locations\r\n\tconst { data, loading, error, refetch } = useQuery(USER_FAV_LOCATIONS, {\r\n\t\tvariables: { id: user?.data._id },\r\n\t});\r\n\r\n\t//mutation to add a favourite location for the current user\r\n\tconst [favouriteLocation] = useMutation(FAVOURITE_LOCATION);\r\n\r\n\t//handle fav location click\r\n\tconst handleFavouriteLocation = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tawait favouriteLocation({\r\n\t\t\tvariables: { user_id: user.data._id, location },\r\n\t\t});\r\n\r\n\t\trefetch();\r\n\t};\r\n\r\n\t//update isFavouriteLocation when data loads\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tconst filteredLocation = data.userFavLocations.filter(\r\n\t\t\t\t(i) => i.name === location\r\n\t\t\t);\r\n\r\n\t\t\tfilteredLocation.length\r\n\t\t\t\t? setFavouriteLocation(true)\r\n\t\t\t\t: setFavouriteLocation(false);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tconst Styles = {\r\n\t\tfav: {\r\n\t\t\tcolor: '#0A9D7B',\r\n\t\t\tcursor: 'pointer',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isFavouriteLocation ? (\r\n\t\t\t\t<HeartFill\r\n\t\t\t\t\tstyle={Styles.fav}\r\n\t\t\t\t\tclassName='mx-3'\r\n\t\t\t\t\tonClick={handleFavouriteLocation}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Heart\r\n\t\t\t\t\tstyle={Styles.fav}\r\n\t\t\t\t\tclassName='mx-3'\r\n\t\t\t\t\tonClick={handleFavouriteLocation}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default FavLocation;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\Profile.js",["144"],"import { useQuery } from '@apollo/client';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport Auth from '../utils/auth';\r\nimport { USER_MEDIA } from '../utils/queries';\r\nimport PhotoCard from '../components/photoCard';\r\nimport VideoCard from '../components/videoCard';\r\nimport DisplayFavLocations from '../components/displayFavLocations';\r\nimport DisplayDots from '../components/displayDots';\r\n\r\nconst Profile = () => {\r\n\tconst [vertical, setVertical] = useState(false);\r\n\r\n\tconst handleClick = (e) => {\r\n\t\tsetVertical(!vertical);\r\n\t};\r\n\r\n\tconst currentUser = Auth.getProfile();\r\n\r\n\t//return all media for the current user\r\n\tconst { data, loading, error } = useQuery(USER_MEDIA, {\r\n\t\tvariables: { userId: currentUser?.data._id },\r\n\t\tpollInterval: 500,\r\n\t});\r\n\r\n\tconst Styles = {\r\n\t\tmainHeading: {\r\n\t\t\tfontSize: '5vw',\r\n\t\t\tcolor: '#F5F6F9',\r\n\t\t},\r\n\t\tmainHeadingText: {\r\n\t\t\tfontSize: '2vw',\r\n\t\t\tcolor: '#F5F6F9',\r\n\t\t},\r\n\t\tmainSection: {\r\n\t\t\tminHeight: '30vh',\r\n\t\t},\r\n\t\tsecondaryBackground: {\r\n\t\t\tbackgroundColor: '#F5F6F9',\r\n\t\t},\r\n\t\tsecondaryHeading: {\r\n\t\t\tfontSize: '5vw',\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t\tsecondarySection: {\r\n\t\t\tposition: 'relative',\r\n\t\t\tbottom: '80px',\r\n\t\t},\r\n\t\tloadingWheel: {\r\n\t\t\tcolor: '#0A9D7B',\r\n\t\t},\r\n\t\tfontColour: {\r\n\t\t\tcolor: '#042D3C',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container className='my-5' style={Styles.mainSection}>\r\n\t\t\t\t<h3\r\n\t\t\t\t\tstyle={Styles.mainHeading}\r\n\t\t\t\t>{`Hi ${currentUser?.data?.username},`}</h3>\r\n\t\t\t\t<p style={Styles.mainHeadingText}>Welcome to your profile.</p>\r\n\t\t\t</Container>\r\n\t\t\t<Container fluid className='p-0 m-0' style={Styles.secondaryBackground}>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<DisplayFavLocations id={currentUser?.data?._id} />\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<h4 className='text-center mb-5' style={Styles.secondaryHeading}>\r\n\t\t\t\t\t\tYour Uploaded Media\r\n\t\t\t\t\t</h4>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Spinner animation='border' style={Styles.loadingWheel} />\r\n\t\t\t\t\t\t\t\t\t\t<span className='mx-2' style={Styles.fontColour}>\r\n\t\t\t\t\t\t\t\t\t\t\tLoading...\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : data?.userMedia.length ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<DisplayDots handleClick={handleClick} />\r\n\t\t\t\t\t\t\t\t\t{data?.userMedia.map((media, i) =>\r\n\t\t\t\t\t\t\t\t\t\tmedia.url.includes('video/upload') ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<VideoCard\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlocation={media.locationID.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={media.url}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate={media.date}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisVertical={vertical}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcaption={media.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser={media.user_id.username}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={media._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpublic_id={media.public_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserID={media.user_id._id}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<PhotoCard\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlocation={media.locationID.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\turl={media.url}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdate={media.date}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisVertical={vertical}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcaption={media.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\tuser={media.user_id.username}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid={media._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpublic_id={media.public_id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tuserID={media.user_id._id}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<p>No media uploaded</p>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Container>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\displayFavLocations.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\locationSearchBar.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\displayDots.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\pages\\Error.js",[],"C:\\Users\\Nick\\Desktop\\Monash Bootcamp\\Surf-Community-Platform\\client\\src\\components\\commentCard.js",["145","146"],"import { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Form } from 'react-bootstrap';\r\nimport { ThreeDots } from 'react-bootstrap-icons';\r\nimport { useMutation } from '@apollo/client';\r\nimport { UPDATE_COMMENT, DELETE_COMMENT } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst CommentCard = ({ id, username, body, userID }) => {\r\n\tconst [showEdit, setShowEdit] = useState(false);\r\n\tconst [showUpdate, setShowUpdate] = useState(false);\r\n\tconst [isUser, setIsUser] = useState(false);\r\n\tconst [updateCommentField, setUpdateComment] = useState(body);\r\n\r\n\tconst handleShowEdit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tsetShowEdit(!showEdit);\r\n\t\tsetShowUpdate(false);\r\n\t};\r\n\r\n\tconst handleShowUpdate = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tsetShowEdit(false);\r\n\t\tsetShowUpdate(!showUpdate);\r\n\t\tsetUpdateComment(body);\r\n\t};\r\n\r\n\tconst [updateComment] = useMutation(UPDATE_COMMENT);\r\n\r\n\tconst [deleteComment] = useMutation(DELETE_COMMENT);\r\n\r\n\tconst handleDelete = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tsetShowEdit(false);\r\n\t\tsetShowUpdate(false);\r\n\r\n\t\tconst deletedComment = await deleteComment({\r\n\t\t\tvariables: {\r\n\t\t\t\tdeleteCommentId: id,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleUpdateComment = async (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst update = await updateComment({\r\n\t\t\tvariables: {\r\n\t\t\t\tbody: updateCommentField,\r\n\t\t\t\tupdateCommentId: id,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tsetShowUpdate(false);\r\n\t};\r\n\r\n\tconst isLoggedIn = Auth.loggedIn();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isLoggedIn) {\r\n\t\t\tconst currentUser = Auth.getProfile();\r\n\t\t\tcurrentUser?.data?._id === userID ? setIsUser(true) : setIsUser(false);\r\n\t\t}\r\n\t}, [isLoggedIn, userID]);\r\n\r\n\tconst Styles = {\r\n\t\tcursor: {\r\n\t\t\tcursor: 'pointer',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='my-3'>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t{username}{' '}\r\n\t\t\t\t\t\t\t{isUser ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<ThreeDots\r\n\t\t\t\t\t\t\t\t\t\tclassName='mx-3'\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleShowEdit(e)}\r\n\t\t\t\t\t\t\t\t\t\tstyle={Styles.cursor}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{showEdit ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='mx-3'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleShowUpdate(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={Styles.cursor}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='mx-3'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleDelete(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={Styles.cursor}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t{!showUpdate ? (\r\n\t\t\t\t\t<p>{body}</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Form onSubmit={(e) => handleUpdateComment(e)} className='mt-3'>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas='textarea'\r\n\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\tvalue={updateCommentField}\r\n\t\t\t\t\t\t\tonChange={(e) => setUpdateComment(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tonClick={(e) => handleShowUpdate(e)}\r\n\t\t\t\t\t\t\tclassName='mt-3 me-3'\r\n\t\t\t\t\t\t\tvalue='cancel'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button type='submit' className='mt-3' value='update'>\r\n\t\t\t\t\t\t\tUpdate Comment\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CommentCard;\r\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":11,"column":19,"nodeType":"153","messageId":"154","endLine":11,"endColumn":24},{"ruleId":"151","severity":1,"message":"155","line":2,"column":18,"nodeType":"153","messageId":"154","endLine":2,"endColumn":22},{"ruleId":"156","severity":1,"message":"157","line":16,"column":2,"nodeType":"153","endLine":16,"endColumn":11,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":33,"column":52,"nodeType":"153","messageId":"154","endLine":33,"endColumn":62},{"ruleId":"151","severity":1,"message":"160","line":36,"column":52,"nodeType":"153","messageId":"154","endLine":36,"endColumn":62},{"ruleId":"151","severity":1,"message":"161","line":39,"column":56,"nodeType":"153","messageId":"154","endLine":39,"endColumn":68},{"ruleId":"162","severity":1,"message":"163","line":62,"column":22,"nodeType":"164","messageId":"165","endLine":62,"endColumn":24},{"ruleId":"151","severity":1,"message":"166","line":29,"column":10,"nodeType":"153","messageId":"154","endLine":29,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":7,"column":25,"nodeType":"153","messageId":"154","endLine":7,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":17,"column":25,"nodeType":"153","messageId":"154","endLine":17,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":11,"column":25,"nodeType":"153","messageId":"154","endLine":11,"endColumn":30},{"ruleId":"151","severity":1,"message":"167","line":13,"column":2,"nodeType":"153","messageId":"154","endLine":13,"endColumn":13},{"ruleId":"151","severity":1,"message":"168","line":23,"column":24,"nodeType":"153","messageId":"154","endLine":23,"endColumn":28},{"ruleId":"151","severity":1,"message":"152","line":23,"column":39,"nodeType":"153","messageId":"154","endLine":23,"endColumn":44},{"ruleId":"151","severity":1,"message":"168","line":24,"column":24,"nodeType":"153","messageId":"154","endLine":24,"endColumn":28},{"ruleId":"151","severity":1,"message":"152","line":24,"column":39,"nodeType":"153","messageId":"154","endLine":24,"endColumn":44},{"ruleId":"151","severity":1,"message":"169","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":16},{"ruleId":"151","severity":1,"message":"170","line":13,"column":16,"nodeType":"153","messageId":"154","endLine":13,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":13,"column":25,"nodeType":"153","messageId":"154","endLine":13,"endColumn":30},{"ruleId":"156","severity":1,"message":"171","line":42,"column":5,"nodeType":"172","endLine":42,"endColumn":11,"suggestions":"173"},{"ruleId":"151","severity":1,"message":"152","line":21,"column":25,"nodeType":"153","messageId":"154","endLine":21,"endColumn":30},{"ruleId":"151","severity":1,"message":"174","line":39,"column":9,"nodeType":"153","messageId":"154","endLine":39,"endColumn":23},{"ruleId":"151","severity":1,"message":"175","line":49,"column":9,"nodeType":"153","messageId":"154","endLine":49,"endColumn":15},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setLoggedIn'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["178"],"'photoError' is assigned a value but never used.","'videoError' is assigned a value but never used.","'commentError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'surfDataError' is assigned a value but never used.","'Speedometer' is defined but never used.","'data' is assigned a value but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'deletedComment' is assigned a value but never used.","'update' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Add dependencies array: []",{"range":"184","text":"185"},"Update the dependencies array to be: [data, location]",{"range":"186","text":"187"},[768,768],", []",[1245,1251],"[data, location]"]